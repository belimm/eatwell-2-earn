const vision = require('@google-cloud/vision');
const dotenv = require('dotenv');

try {
   dotenv.config({ path: './config.env' });
} catch (error) {
   console.log('error visonClient dotenv', error);
}

const {
   GOOGLE_APPLICATION_CREDENTIALS_TYPE,
   GOOGLE_APPLICATION_CREDENTIALS_PROJECT_ID,
   GOOGLE_APPLICATION_CREDENTIALS_PRIVATE_KEY_ID,
   GOOGLE_APPLICATION_CREDENTIALS_PRIVATE_KEY,
   GOOGLE_APPLICATION_CREDENTIALS_CLIENT_EMAIL,
   GOOGLE_APPLICATION_CREDENTIALS_CLIENT_ID,
   GOOGLE_APPLICATION_CREDENTIALS_AUTH_URI,
   GOOGLE_APPLICATION_CREDENTIALS_TOKEN_URI,
   GOOGLE_APPLICATION_CREDENTIALS_AUTH_PROVIDER_X509_CERT_URL,
   GOOGLE_APPLICATION_CREDENTIALS_CLIENT_X509_CERT_URL,
   GOOGLE_APPLICATION_CREDENTIALS_UNIVERSE_DOMAIN,
} = process.env;

const googleCredits = {
   type: GOOGLE_APPLICATION_CREDENTIALS_TYPE,
   project_id: GOOGLE_APPLICATION_CREDENTIALS_PROJECT_ID,
   private_key_id: GOOGLE_APPLICATION_CREDENTIALS_PRIVATE_KEY_ID,
   private_key: GOOGLE_APPLICATION_CREDENTIALS_PRIVATE_KEY,
   client_email: GOOGLE_APPLICATION_CREDENTIALS_CLIENT_EMAIL,
   client_id: GOOGLE_APPLICATION_CREDENTIALS_CLIENT_ID,
   auth_uri: GOOGLE_APPLICATION_CREDENTIALS_AUTH_URI,
   token_uri: GOOGLE_APPLICATION_CREDENTIALS_TOKEN_URI,
   auth_provider_x509_cert_url:
      GOOGLE_APPLICATION_CREDENTIALS_AUTH_PROVIDER_X509_CERT_URL,
   client_x509_cert_url: GOOGLE_APPLICATION_CREDENTIALS_CLIENT_X509_CERT_URL,
   universe_domain: GOOGLE_APPLICATION_CREDENTIALS_UNIVERSE_DOMAIN,
};

// Use googleCredentials directly for authentication
const client = new vision.ImageAnnotatorClient({
   credentials: googleCredits,
});

module.exports = client;
